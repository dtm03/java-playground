@startuml
interface Component {
    +operation(): void
}

class ConcreteComponentA {
    +operation(): void
}

class ConcreteComponentB {
    +operation(): void
}

abstract class Decorator {
    -component: Component
    +Decorator(component: Component)
    +operation(): void
}

class ConcreteDecoratorA {
    +ConcreteDecoratorA(component: Component)
    +operation(): void
}

class ConcreteDecoratorB {
    +ConcreteDecoratorB(component: Component)
    +operation(): void
}

Component <|.. ConcreteComponentA
Component <|.. ConcreteComponentB
Component <|.. Decorator
Decorator <|-- ConcreteDecoratorA
Decorator <|-- ConcreteDecoratorB
Decorator o-- Component

@enduml
